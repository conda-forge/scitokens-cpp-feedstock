{% set name = "scitokens-cpp" %}
{% set version = "0.6.3" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://github.com/scitokens/{{ name }}/archive/v{{ version }}.tar.gz
  sha256: df6758b0d5cc288befe4b4a44f29bc7afedf62093a6c8b9ab5e6fbcecf40daf4
  patches:
    # https://github.com/scitokens/scitokens-cpp/issues/70
    - macos-uuid.patch  # [osx]
    # https://github.com/scitokens/scitokens-cpp/issues/61
    - vendor-jwt-cpp.patch
    # https://github.com/scitokens/scitokens-cpp/issues/72
    - cflags.patch

build:
  error_overdepending: true
  error_overlinking: true
  number: 2
  run_exports:
    - {{ pin_subpackage("scitokens-cpp", max_pin="x") }}
  skip: true  # [win]

requirements:
  build:
    - {{ compiler('cxx') }}
    - cmake
    - make  # [unix]
    - ninja  # [not unix]
    - pkg-config
  host:
    - gtest
    #- jwt-cpp 0.4.*  <-- jwt-cpp 0.4.0 isn't being migrated on conda-forge
    - libcurl
    - libuuid  # [linux]
    - openssl
    - picojson
    - sqlite

test:
  commands:
    - test -f ${PREFIX}/include/scitokens/scitokens.h  # [unix]
    - test -f ${PREFIX}/lib/libSciTokens${SHLIB_EXT}  # [unix]

about:
  home: https://github.com/scitokens/scitokens-cpp
  dev_url: https://github.com/scitokens/scitokens-cpp
  summary: A C++ implementation of the SciTokens library with a C library interface
  license: Apache-2.0
  license_file:
    - LICENSE
    - vendor/jwt-cpp/LICENSE
  description: |
    SciTokens provide a token format for distributed authorization.
    The tokens are self-describing, can be verified in a distributed
    fashion (no need to contact the issuer to determine if the token is
    valid). This is convenient for a federated environment where several
    otherwise-independent storage endpoints want to delegate trust for an
    issuer for managing a storage allocation.

extra:
  recipe-maintainers:
    - chrisburr
    - duncanmmacleod
